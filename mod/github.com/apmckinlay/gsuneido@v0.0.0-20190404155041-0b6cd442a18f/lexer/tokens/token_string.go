// Code generated by "stringer -type=Token"; DO NOT EDIT.

package tokens

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Nil-0]
	_ = x[Eof-1]
	_ = x[Error-2]
	_ = x[Identifier-3]
	_ = x[Number-4]
	_ = x[String-5]
	_ = x[Whitespace-6]
	_ = x[Comment-7]
	_ = x[Newline-8]
	_ = x[Hash-9]
	_ = x[Comma-10]
	_ = x[Semicolon-11]
	_ = x[At-12]
	_ = x[LParen-13]
	_ = x[RParen-14]
	_ = x[LBracket-15]
	_ = x[RBracket-16]
	_ = x[LCurly-17]
	_ = x[RCurly-18]
	_ = x[RangeTo-19]
	_ = x[RangeLen-20]
	_ = x[Not-21]
	_ = x[BitNot-22]
	_ = x[New-23]
	_ = x[Dot-24]
	_ = x[CompareStart-25]
	_ = x[Is-26]
	_ = x[Isnt-27]
	_ = x[Match-28]
	_ = x[MatchNot-29]
	_ = x[Lt-30]
	_ = x[Lte-31]
	_ = x[Gt-32]
	_ = x[Gte-33]
	_ = x[CompareEnd-34]
	_ = x[QMark-35]
	_ = x[Colon-36]
	_ = x[AssocStart-37]
	_ = x[And-38]
	_ = x[Or-39]
	_ = x[BitOr-40]
	_ = x[BitAnd-41]
	_ = x[BitXor-42]
	_ = x[Add-43]
	_ = x[Sub-44]
	_ = x[Cat-45]
	_ = x[Mul-46]
	_ = x[Div-47]
	_ = x[AssocEnd-48]
	_ = x[Mod-49]
	_ = x[LShift-50]
	_ = x[RShift-51]
	_ = x[Inc-52]
	_ = x[PostInc-53]
	_ = x[Dec-54]
	_ = x[PostDec-55]
	_ = x[AssignStart-56]
	_ = x[Eq-57]
	_ = x[AddEq-58]
	_ = x[SubEq-59]
	_ = x[CatEq-60]
	_ = x[MulEq-61]
	_ = x[DivEq-62]
	_ = x[ModEq-63]
	_ = x[LShiftEq-64]
	_ = x[RShiftEq-65]
	_ = x[BitOrEq-66]
	_ = x[BitAndEq-67]
	_ = x[BitXorEq-68]
	_ = x[AssignEnd-69]
	_ = x[In-70]
	_ = x[Break-71]
	_ = x[Case-72]
	_ = x[Catch-73]
	_ = x[Class-74]
	_ = x[Continue-75]
	_ = x[Default-76]
	_ = x[Do-77]
	_ = x[Else-78]
	_ = x[False-79]
	_ = x[For-80]
	_ = x[Forever-81]
	_ = x[Function-82]
	_ = x[If-83]
	_ = x[Return-84]
	_ = x[Switch-85]
	_ = x[Super-86]
	_ = x[This-87]
	_ = x[Throw-88]
	_ = x[True-89]
	_ = x[Try-90]
	_ = x[While-91]
}

const _Token_name = "NilEofErrorIdentifierNumberStringWhitespaceCommentNewlineHashCommaSemicolonAtLParenRParenLBracketRBracketLCurlyRCurlyRangeToRangeLenNotBitNotNewDotCompareStartIsIsntMatchMatchNotLtLteGtGteCompareEndQMarkColonAssocStartAndOrBitOrBitAndBitXorAddSubCatMulDivAssocEndModLShiftRShiftIncPostIncDecPostDecAssignStartEqAddEqSubEqCatEqMulEqDivEqModEqLShiftEqRShiftEqBitOrEqBitAndEqBitXorEqAssignEndInBreakCaseCatchClassContinueDefaultDoElseFalseForForeverFunctionIfReturnSwitchSuperThisThrowTrueTryWhile"

var _Token_index = [...]uint16{0, 3, 6, 11, 21, 27, 33, 43, 50, 57, 61, 66, 75, 77, 83, 89, 97, 105, 111, 117, 124, 132, 135, 141, 144, 147, 159, 161, 165, 170, 178, 180, 183, 185, 188, 198, 203, 208, 218, 221, 223, 228, 234, 240, 243, 246, 249, 252, 255, 263, 266, 272, 278, 281, 288, 291, 298, 309, 311, 316, 321, 326, 331, 336, 341, 349, 357, 364, 372, 380, 389, 391, 396, 400, 405, 410, 418, 425, 427, 431, 436, 439, 446, 454, 456, 462, 468, 473, 477, 482, 486, 489, 494}

func (i Token) String() string {
	if i >= Token(len(_Token_index)-1) {
		return "Token(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Token_name[_Token_index[i]:_Token_index[i+1]]
}
