// Code generated by counterfeiter. DO NOT EDIT.
package customfakesdir

import (
	"sync"

	"github.com/maxbrunsfeld/counterfeiter/v6/fixtures"
)

type FakeCustomOutput struct {
	CustomFolderStub        func()
	customFolderMutex       sync.RWMutex
	customFolderArgsForCall []struct {
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakeCustomOutput) CustomFolder() {
	fake.customFolderMutex.Lock()
	fake.customFolderArgsForCall = append(fake.customFolderArgsForCall, struct {
	}{})
	stub := fake.CustomFolderStub
	fake.recordInvocation("CustomFolder", []interface{}{})
	fake.customFolderMutex.Unlock()
	if stub != nil {
		fake.CustomFolderStub()
	}
}

func (fake *FakeCustomOutput) CustomFolderCallCount() int {
	fake.customFolderMutex.RLock()
	defer fake.customFolderMutex.RUnlock()
	return len(fake.customFolderArgsForCall)
}

func (fake *FakeCustomOutput) CustomFolderCalls(stub func()) {
	fake.customFolderMutex.Lock()
	defer fake.customFolderMutex.Unlock()
	fake.CustomFolderStub = stub
}

func (fake *FakeCustomOutput) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.customFolderMutex.RLock()
	defer fake.customFolderMutex.RUnlock()
	copiedInvocations := map[string][][]interface{}{}
	for key, value := range fake.invocations {
		copiedInvocations[key] = value
	}
	return copiedInvocations
}

func (fake *FakeCustomOutput) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ fixtures.CustomOutput = new(FakeCustomOutput)
